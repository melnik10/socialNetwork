{"version":3,"sources":["components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPostForm.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/MyPosts/MyPostsContainer.jsx","components/Content/Profile/Profile.jsx","components/Content/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","editMode","setEditMode","useState","status","setStatus","toggleEditMode","updateStatus","useEffect","autoFocus","onBlur","onChange","e","currentTarget","value","onDoubleClick","ProfileInfo","profile","className","s","profileImage","profilePhoto","src","photos","large","userPhoto","profileInfo","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","values","contacts","map","c","i","contactsLink","onClick","openUrl","Preloader","Post","item","message","likesCount","maxlength10","maxLength","ReduxAddPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","type","MyPosts","console","log","postsElements","profilePage","posts","p","id","postsBlock","addPostBlock","data","addPost","postText","reset","MyPostsMemo","React","memo","MyPostsContainer","connect","state","Profile","ProfileContainer","Component","componentDidMount","userId","this","match","params","authUserId","history","push","getUserProfileThunkCreator","getStatusProfileThunkCreator","render","isAuth","updateStatusProfileThunkCreator","to","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.e6bd476e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__YSjBd\",\"profileImage\":\"ProfileInfo_profileImage__2dBBy\",\"profilePhoto\":\"ProfileInfo_profilePhoto__3uTyF\",\"profileInfo\":\"ProfileInfo_profileInfo__27G7W\",\"contactsLink\":\"ProfileInfo_contactsLink__2Lo8L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2zq-8\",\"addPostBlock\":\"MyPosts_addPostBlock__3fMPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2mPem\"};","import React, {useEffect, useState} from \"react\";\n\nexport const ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n    const toggleEditMode = () => {\n        if(editMode) {\n            setEditMode(false)\n            props.updateStatus(status);\n        }\n        else {\n            setEditMode(true);\n        }\n    }\n\n    useEffect(() => {\n        setStatus(props.status)\n    },[props.status])\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n    return (\n      <>\n          {\n              !editMode ?\n                <div>\n                    <span onDoubleClick={toggleEditMode}>{status}</span>\n                </div> :\n                <div>\n                    <input autoFocus={true} onBlur={toggleEditMode} onChange={onStatusChange} value={status}/>\n                </div>\n          }\n      </>\n    );\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../../assets/images/user.png'\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return (\r\n          <Preloader/>\r\n        )\r\n    }\r\n    return (\r\n      <div>\r\n          <div className={s.profileImage}>\r\n          </div>\r\n          <div className={s.profile}>\r\n              <div className={s.profilePhoto}>\r\n                  <img src={props.profile.photos.large || userPhoto}/>\r\n                  <ProfileStatusWithHooks updateStatus={props.updateStatus} status={props.status}/>\r\n              </div>\r\n              <div className={s.profileInfo}>\r\n                  <div><span>My name</span>: {props.profile.fullName}</div>\r\n                  <div><span>About me</span>: {props.profile.aboutMe}</div>\r\n                  <div>\r\n                      <span>Job:</span> {props.profile.lookingForAJob ? props.profile.lookingForAJobDescription : \"have job\"}\r\n                  </div>\r\n\r\n                  {Object.values(props.profile.contacts).map((c, i) => <div key={i} className={s.contactsLink} onClick={() => props.openUrl(c) }>{c}</div>)}\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img src=\"https://eugeneronin.com/wp-content/uploads/2010/01/avatar.jpg\"></img>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                {props.likesCount} like\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {Textarea} from \"../../../common/FieldComponents/FieldComponents\";\nimport {maxLength, required} from \"../../../../redux/utilities/validators\";\n\nconst maxlength10 = maxLength(10);\n\nexport const AddPostForm = (props) => {\n    return (\n      <form onSubmit={props.handleSubmit}>\n          <div>\n              <Field component={Textarea} name={'postText'} placeholder={'Enter text...'} validate={[required, maxlength10]}/>\n          </div>\n          <div>\n              <button type={'submit'}>Add post</button>\n              <button type={'reset'}>Remove post</button>\n          </div>\n      </form>\n    )\n}\n\nexport const ReduxAddPostForm = reduxForm({form: 'addPost',})(AddPostForm);\n\nexport default ReduxAddPostForm;","import React from 'react';\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport ReduxAddPostForm from \"./MyPostForm\";\r\n\r\n\r\nconst MyPosts = props => {\r\n    console.log('RENDER PROFSSTATUS')\r\n\r\n    let postsElements = props.profilePage.posts.map(p => <Post key={p.id} message={p.message}\r\n                                                               likesCount={p.likesCount}/>)\r\n    const addPost = (data) => {\r\n        props.addPost(data.postText);\r\n        props.reset('addPost');\r\n    }\r\n\r\n    return (\r\n      <div className={s.postsBlock}>\r\n          <h3> My posts </h3>\r\n          <div className={s.addPostBlock}>\r\n              <ReduxAddPostForm onSubmit={addPost}/>\r\n          </div>\r\n          {postsElements}\r\n      </div>\r\n    )\r\n}\r\n\r\n//MEMO NOT WORKING\r\nconst areEqual = (prevProps, nextProps) => {\r\n    return prevProps != nextProps;\r\n}\r\n\r\nconst MyPostsMemo = React.memo(MyPosts)\r\n\r\n\r\nexport default MyPostsMemo;","import React from 'react';\r\nimport {addPost} from \"../../../../redux/reducers/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\"\r\nimport {connect} from \"react-redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {reset, addPost, })(MyPosts)\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n      <div className={s.profile}>\r\n          <ProfileInfo updateStatus={props.updateStatus} status={props.status} profile={props.profile} openUrl ={props.openUrl}/>\r\n          <MyPostsContainer/>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getStatusProfileThunkCreator,\r\n    getUserProfileThunkCreator,\r\n    openUrl,\r\n    updateStatusProfileThunkCreator\r\n} from \"../../../redux/reducers/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfileThunkCreator(userId);\r\n        this.props.getStatusProfileThunkCreator(userId);\r\n    }\r\n\r\n    render() {\r\n        let userId = this.props.match.params.userId;\r\n        if(this.props.isAuth || userId) {\r\n            return (\r\n              <Profile {...this.props}\r\n                       profile={this.props.profile}\r\n                       status={this.props.status}\r\n                       openUrl={this.props.openUrl}\r\n                       updateStatus={this.props.updateStatusProfileThunkCreator}/>\r\n            )\r\n        }\r\n        else {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps,\r\n    {\r\n        getUserProfileThunkCreator,\r\n        getStatusProfileThunkCreator,\r\n        updateStatusProfileThunkCreator,\r\n        openUrl,\r\n    }),\r\n  withRouter,\r\n  // withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}