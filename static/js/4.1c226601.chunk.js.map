{"version":3,"sources":["components/Content/Dialogs/Dialogs.module.css","components/Content/Dialogs/Message/Message.module.css","components/Content/Dialogs/DialogsItem/DialogsItem.module.css","components/Content/Dialogs/Message/Message.jsx","components/Content/Dialogs/DialogsItem/DialogsItem.jsx","components/Content/Dialogs/Message/AddMessageForm.js","components/Content/Dialogs/Dialogs.jsx","redux/hoc/withAuthRedirect.js","components/Content/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","cssClassMessage","from","s","sentMessage","receivedMessage","className","avatarMessage","src","avatar","message","DialogsItem","path","id","dialog","to","name","maxlength50","maxLength","ReduxAddMessageForm","reduxForm","form","onSubmit","handleSubmit","messagesElements","messageInput","Field","validate","required","component","Textarea","placeholder","sendMessageButton","type","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","ind","messages","m","messagesElement","dialogsItems","dataMessage","sendMessage","textMessage","reset","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","DialogsContainer","compose"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,iBAAmB,kCAAkC,aAAe,8BAA8B,kBAAoB,qC,oBCA/TD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,YAAc,6BAA6B,gBAAkB,mC,oBCAjKD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,8B,6GCsBjDC,MAlBEC,IAEb,IAAIC,EAMJ,OAJIA,EADc,GAAdD,EAAME,KACYC,IAAEC,YAEFD,IAAEE,gBAGtB,sBAAKC,UAAWL,EAAhB,UACI,qBAAKK,UAAWH,IAAEI,cAAeC,IAAKR,EAAMS,SAC5C,sBAAMH,UAAWH,IAAEO,QAAnB,SACKV,EAAMU,c,0BCJNC,MATMX,IACjB,IAAIY,EAAO,YAAcZ,EAAMa,GAC/B,OACE,qBAAKP,UAAS,UAAKH,IAAEW,QAArB,SACI,cAAC,IAAD,CAASC,GAAIH,EAAb,SAAoBZ,EAAMgB,U,kCCFpC,MAAMC,EAAcC,YAAU,IAcfC,MADaC,YAAU,CAACC,KAAM,eAAjBD,EAZJpB,GAElB,sBAAMsB,SAAUtB,EAAMuB,aAAtB,SACI,sBAAKjB,UAAWH,IAAEqB,iBAAlB,UACI,sBAAMlB,UAAWH,IAAEsB,aAAnB,SAAiC,cAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,IAAUX,GAAcY,UAAWC,IAAUd,KAAM,cAAee,YAAa,uBAClI,wBAASzB,UAAWH,IAAE6B,kBAAmBC,KAAM,SAA/C,iCCwBCC,MA5BElC,IACb,IAAImC,EAAkBnC,EAAMoC,YAAYC,QAAQC,KAAI,CAACC,EAAGC,IAAQ,cAAC,EAAD,CAAuBxB,KAAMuB,EAAEvB,KAAMH,GAAI0B,EAAE1B,IAAzB2B,KAC9EhB,EAAmBxB,EAAMoC,YAAYK,SAASH,KAAI,CAACI,EAAGF,IAAQ,cAAC,EAAD,CAAmBlC,UAAWH,IAAEwC,gBAAiBjC,QAASgC,EAAEhC,QAChER,KAAMwC,EAAExC,KAAMa,GAAI2B,EAAE3B,GAAIN,OAAQiC,EAAEjC,QADhB+B,KAShF,OACE,sBAAKlC,UAAWH,IAAEkC,QAAlB,UACI,qBAAK/B,UAAWH,IAAEyC,aAAlB,SACKT,IAEL,sBAAK7B,UAAWH,IAAEsC,SAAlB,UACKjB,EACD,8BACI,cAAC,EAAD,CAAqBF,SAbduB,IACjB7C,EAAM8C,YAAYD,EAAYE,aAC9B/C,EAAMgD,MAAM,2B,OCZpB,IAAIC,EAA2BC,IACpB,CACHC,OAAQD,EAAME,KAAKD,SAiBZE,MAbkBC,GAQCC,YAAQN,EAARM,EAPNvD,GAChBA,EAAMmD,OAGH,cAACG,EAAD,IAAetD,IAFX,cAAC,IAAD,CAAUe,GAAI,a,eCAjC,MAAMyC,EAAmBC,YACvBF,aANqBL,IACZ,CACHd,YAAac,EAAMd,eAIA,CAACY,UAAMF,kBAChCO,EAFuBI,CAELvB,GACLsB","file":"static/js/4.1c226601.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1dEYO\",\"dialogsItems\":\"Dialogs_dialogsItems__3M47K\",\"dialog\":\"Dialogs_dialog__Lpne5\",\"active\":\"Dialogs_active__t2gBP\",\"messages\":\"Dialogs_messages__1jCn3\",\"messagesElements\":\"Dialogs_messagesElements__3PjB_\",\"messageInput\":\"Dialogs_messageInput__3vGT0\",\"sendMessageButton\":\"Dialogs_sendMessageButton__3Bg4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1j5kn\",\"avatarMessage\":\"Message_avatarMessage__UBcJ8\",\"sentMessage\":\"Message_sentMessage__32XTX\",\"receivedMessage\":\"Message_receivedMessage__1aZSN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__2POq4\",\"active\":\"DialogsItem_active__mKwh_\"};","import React from 'react';\r\nimport s from \"./Message.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    let cssClassMessage;\r\n    if (props.from == 0) {\r\n        cssClassMessage = s.sentMessage;\r\n    } else {\r\n        cssClassMessage = s.receivedMessage;\r\n    }\r\n    return (\r\n      <div className={cssClassMessage}>\r\n          <img className={s.avatarMessage} src={props.avatar}/>\r\n          <span className={s.message}>\r\n              {props.message}\r\n          </span>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n      <div className={`${s.dialog}`}>\r\n          <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default DialogsItem;","import s from \"../Dialogs.module.css\";\nimport {Field, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {Textarea} from \"../../../common/FieldComponents/FieldComponents\";\nimport {maxLength, required} from \"../../../../redux/utilities/validators\";\n\nconst maxlength50 = maxLength(50);\nconst AddMessageForm = (props) => {\n    return (\n      <form onSubmit={props.handleSubmit}>\n          <div className={s.messagesElements}>\n              <span className={s.messageInput}><Field validate={[required, maxlength50]} component={Textarea} name={'textMessage'} placeholder={'Input message...'}/></span>\n              <button  className={s.sendMessageButton} type={'submit'}>Send message</button>\n          </div>\n\n      </form>\n    )\n}\n\nconst ReduxAddMessageForm = reduxForm({form: 'messageForm'})(AddMessageForm);\nexport default ReduxAddMessageForm;","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\"\r\nimport ReduxAddMessageForm from \"./Message/AddMessageForm\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogsPage.dialogs.map((d, ind) => <DialogsItem key={ind} name={d.name} id={d.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map((m, ind) => <Message key={ind} className={s.messagesElement} message={m.message}\r\n                                                                  from={m.from} to={m.to} avatar={m.avatar}/>)\r\n\r\n\r\n    const sendMessage = (dataMessage) => {\r\n        props.sendMessage(dataMessage.textMessage);\r\n        props.reset('messageForm')\r\n    }\r\n\r\n    return (\r\n      <div className={s.dialogs}>\r\n          <div className={s.dialogsItems}>\r\n              {dialogsElements}\r\n          </div>\r\n          <div className={s.messages}>\r\n              {messagesElements}\r\n              <div>\r\n                  <ReduxAddMessageForm onSubmit={sendMessage}/>\r\n              </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    let WrapperContainer = (props) => {\n        if(!props.isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return <Component {...props}/>\n    }\n\n    let WrapperContainerConnect = connect(mapStateToPropsRedirect)(WrapperContainer)\n    return WrapperContainerConnect;\n}\n\n\nexport default withAuthRedirect;","import React from 'react';\r\nimport {sendMessage} from \"../../../redux/reducers/dialogs_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport withAuthRedirect from \"../../../redux/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {reset} from \"redux-form\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n}\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, {reset,sendMessage}),\r\n  withAuthRedirect)(Dialogs)\r\nexport default DialogsContainer;"],"sourceRoot":""}